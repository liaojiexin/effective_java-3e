消除过期的对象引用
虽然java的具有垃圾回收功能，但是有时候一些代码虽然能运行，但是java垃圾回收器不能很好的回收那些过期的对象引用，
久而久之程序就出现OOM错误

1.Stack 这段程序没有明显错误，它都会成功地通过每一项测试，但是这个程序中隐藏了一个内存泄露问题。因为过期引用对象问题

2.内存泄露的另一个常见来源是缓存。对象放到缓存中很容易被遗忘。可以用WeakHashMap代表缓存，当缓存中的项过期之后，它们就会被自动
删除，记主只有当所要的缓存项的生命周期是由该键的外部引用而不是由值决定时，WeakHashMap才有用处。另外可以启动一个后台线程定时清除
没有的项

3.内存泄露的另一个常见来源时监听器和其他回调。例如实现一个API，客户端在这个API中注册回调，却没有显示地取消注册，那么它们就会
不断地堆积起来。确保回调立即被当作垃圾回收的最佳方法是只保存它们的弱引用，例如只把它们保存成WeakHashMap中的键