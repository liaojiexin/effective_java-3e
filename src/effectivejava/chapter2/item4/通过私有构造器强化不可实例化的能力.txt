通过私有构造器强化不可实例化的能力
有时候可能需要编写只包含静态方法和静态域的类。像这样的工具类不希望被实例化，因为实例化对它来说没有意义，
但是在缺少显示构造器的情况下，编译器会自动提供一个公有的、无参的缺省构造器。所以企图通过将类做成抽象类来
强制该类不可被实例化是行不通的。该类可以被子类化，并且该子类也可以被实例化。

UtilityClass 让类包含一个私有构造器，它就不能被实例化